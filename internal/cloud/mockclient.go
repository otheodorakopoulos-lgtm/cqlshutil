// Code generated by MockGen. DO NOT EDIT.
// Source: clientinterface.go

// Package cloud is a generated GoMock package.
package cloud

import (
	io "io"
	reflect "reflect"
	pkg "scyllaDbAssignment/pkg"

	gomock "github.com/golang/mock/gomock"
)

// MockClientInterface is a mock of ClientInterface interface.
type MockClientInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientInterfaceMockRecorder
}

// MockClientInterfaceMockRecorder is the mock recorder for MockClientInterface.
type MockClientInterfaceMockRecorder struct {
	mock *MockClientInterface
}

// NewMockClientInterface creates a new mock instance.
func NewMockClientInterface(ctrl *gomock.Controller) *MockClientInterface {
	mock := &MockClientInterface{ctrl: ctrl}
	mock.recorder = &MockClientInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientInterface) EXPECT() *MockClientInterfaceMockRecorder {
	return m.recorder
}

// DownloadVersion mocks base method.
func (m *MockClientInterface) DownloadVersion(versionSuffix, downloadableKey string) (io.ReadCloser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadVersion", versionSuffix, downloadableKey)
	ret0, _ := ret[0].(io.ReadCloser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DownloadVersion indicates an expected call of DownloadVersion.
func (mr *MockClientInterfaceMockRecorder) DownloadVersion(versionSuffix, downloadableKey interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadVersion", reflect.TypeOf((*MockClientInterface)(nil).DownloadVersion), versionSuffix, downloadableKey)
}

// ListVersions mocks base method.
func (m *MockClientInterface) ListVersions() ([]pkg.Version, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListVersions")
	ret0, _ := ret[0].([]pkg.Version)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListVersions indicates an expected call of ListVersions.
func (mr *MockClientInterfaceMockRecorder) ListVersions() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListVersions", reflect.TypeOf((*MockClientInterface)(nil).ListVersions))
}
